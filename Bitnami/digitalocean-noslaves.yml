#
#FILE
#	digitalocean.yml based on betacluster.yml
#DETAILS
#	We are trying to build a flexible HA RADIUS server that
#	will scale well and allow for 1/3 three nodes to go down with no
#	impact.
#


version: '3.3'

services:
  
  #
  #Authentication DB cluster start
  #
  #
  authdb-master:
    image: 'docker0.unxs.io:5000/mariadb:dev'
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /data/authdb-master/bitnami:/bitnami
    environment:
      - MARIADB_REPLICATION_MODE=master
      - MARIADB_REPLICATION_USER=repl_user
      - MARIADB_REPLICATION_PASSWORD=64f07c48f0
      - MARIADB_ROOT_PASSWORD=64f07c48f0
      - MARIADB_USER=5xyrwi8yoyet5t7p
      - MARIADB_PASSWORD=smusadfwd9wzt59o
      - MARIADB_DATABASE=radius
    ports:
      - '3306:3306'

  authdb-setup:
    image: 'docker0.unxs.io:5000/mariadb:dev'
    depends_on:
      - authdb-slave #indirect since it has to wait on authdb-master
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
    volumes:
      - /data/authdb-setup/auth-start.sh:/usr/local/sbin/start.sh
      - /data/authdb-setup/auth-setup.sql:/tmp/setup.sql
    command: "/usr/local/sbin/start.sh"
    #has to have same login and password as BITNAMI
    environment:
      - cMysqlServer=authdb-master
      - cMysqlLogin=5xyrwi8yoyet5t7p
      - cMysqlPassword=smusadfwd9wzt59o
  #
  #
  #Authentication DB cluster end
  #

  #
  #Accounting DB cluster start
  #
  #

  #
  #
  #Accounting DB cluster end
  #

  #
  #phpmyadmin Multi purpose DB admin tool w/nginx-ssl start
  #
  #
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - '80:80'
      - '443:443'
    volumes:
      #certs generated on manager via get-ssl.sh and renew-ssl.sh via cron
      - /data/letsencrypt:/etc/letsencrypt
      - /data/phpmyadmin/nginx.conf:/etc/nginx.conf
      - /data/nginx/html:/usr/share/nginx/html
    environment:
     - PMA_ARBITRARY=1

  #
  #
  #phpmyadmin end
  #

  #
  #
  #Docker visualizer start
  #
  viz:
    image: dockersamples/visualizer
    depends_on:
      - acctdb-slave
    deploy:
      placement:
        constraints:
          - node.role == manager
    ports:
      - '32712:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
  
  #
  #Docker visualizer end
  #
  #
  
  #
  #
  #FreeRADIUS Accounting start
  #
  acct-freeradius:
    #ports:
    #  - "1813:1813/udp"
    ports:
      - target: 1813
        published: 1813
        protocol: udp
        mode: host
    image: "docker0.unxs.io:5000/freeradius:dev"
    volumes:
      - /data/freeradius/clients.conf:/etc/raddb/clients.conf
      - /data/freeradius/users:/etc/raddb/users
    environment:
      #- cMysqlServer=acctdb-slave
      - cMysqlServer=authdb-master
      - cMysqlLogin=root
      - cMysqlPassword=64f07c48f0
    depends_on:
      - acctdb-slave
    deploy:
      mode: replicated
      replicas: 2
      #endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "2"
  #
  #FreeRADIUS Accounting end
  #
  #

  #
  #
  #FreeRADIUS Authentication start
  #
  auth-freeradius:
    image: "docker0.unxs.io:5000/freeradius:dev"
    #ports:
    #  - "1812:1812/udp"
    ports:
      - target: 1812
        published: 1812
        protocol: udp
        mode: host
    image: "docker0.unxs.io:5000/freeradius:dev"
    volumes:
      - /data/freeradius/clients.conf:/etc/raddb/clients.conf
      - /data/freeradius/users:/etc/raddb/users
    environment:
      #- cMysqlServer=authdb-slave
      - cMysqlServer=authdb-master
      - cMysqlLogin=root
      - cMysqlPassword=64f07c48f0
    depends_on:
      - authdb-slave
    deploy:
      mode: replicated
      replicas: 2
      #endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == worker
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "2"
  #
  #FreeRADIUS Authentication end
  #
  #
  
  #
  #
  #Accounting Agregation start
  #
  
  aggregate:
    image: "docker0.unxs.io:5000/aggregate:dev"  
    environment:
      - cMysqlServer=acctdb-slave
      - cMysqlServerAuth=authdb-slave
      - cMysqlLogin=root
      - cMysqlPassword=64f07c48f0
    depends_on:
      - acct-freeradius
    deploy:
      placement:
        constraints:
          - node.role == manager

 #
 #Accounting Agregation end
 #
 #


#How to use
#docker stack deploy --compose-file digitalocean.yml radiuscluster --with-registry-auth
